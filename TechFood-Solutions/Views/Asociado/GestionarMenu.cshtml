@model TechFood_Solutions.Models.Restaurant

@{
    ViewData["Title"] = "Gestionar Menú - " + Model.Nombre;
}

<style>
    .menu-management-page {
        padding: 20px 0;
        background-color: #f8f9fa;
        min-height: calc(100vh - 120px);
    }

    .menu-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 15px;
    }

    .page-header {
        background: white;
        border-radius: 20px;
        padding: 30px;
        margin-bottom: 30px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 20px;
    }

    .header-info h1 {
        font-size: 2rem;
        color: #2c3e50;
        margin-bottom: 5px;
    }

    .header-info p {
        color: #7f8c8d;
        margin: 0;
    }

    .header-actions {
        display: flex;
        gap: 15px;
        flex-wrap: wrap;
    }

    .btn {
        padding: 12px 25px;
        border-radius: 10px;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.3s;
        border: none;
        cursor: pointer;
        display: inline-flex;
        align-items: center;
        gap: 8px;
    }

    .btn-create {
        background: #27ae60;
        color: white;
        box-shadow: 0 4px 15px rgba(39, 174, 96, 0.3);
    }

    .btn-create:hover {
        background: #219a52;
        color: white;
        text-decoration: none;
        transform: translateY(-2px);
    }

    .btn-back {
        background: #6c757d;
        color: white;
    }

    .btn-back:hover {
        background: #5a6268;
        color: white;
        text-decoration: none;
        transform: translateY(-2px);
    }

    .quick-stats {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .stat-card {
        background: white;
        border-radius: 15px;
        padding: 25px;
        text-align: center;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
        transition: transform 0.3s;
    }

    .stat-card:hover {
        transform: translateY(-5px);
    }

    .stat-number {
        font-size: 2.5rem;
        font-weight: bold;
        color: #e74c3c;
        margin-bottom: 8px;
        display: block;
    }

    .stat-label {
        color: #7f8c8d;
        font-size: 1rem;
        font-weight: 500;
    }

    .filters-section {
        background: white;
        border-radius: 15px;
        padding: 25px;
        margin-bottom: 30px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
    }

    .search-box {
        position: relative;
        max-width: 400px;
    }

    .search-box input {
        width: 100%;
        padding: 15px 50px 15px 20px;
        border: 2px solid #e0e0e0;
        border-radius: 12px;
        font-size: 1rem;
        transition: border-color 0.3s;
    }

    .search-box input:focus {
        outline: none;
        border-color: #e74c3c;
        box-shadow: 0 0 0 0.2rem rgba(231, 76, 60, 0.25);
    }

    .search-icon {
        position: absolute;
        right: 18px;
        top: 50%;
        transform: translateY(-50%);
        color: #7f8c8d;
        font-size: 1.2rem;
    }

    .products-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
        gap: 25px;
    }

    .product-card {
        background: white;
        border-radius: 20px;
        padding: 25px;
        box-shadow: 0 2px 15px rgba(0,0,0,0.08);
        transition: all 0.3s;
        position: relative;
        overflow: hidden;
    }

    .product-card:hover {
        transform: translateY(-8px);
        box-shadow: 0 12px 30px rgba(0,0,0,0.15);
    }

    .product-image-container {
        position: relative;
        height: 220px;
        border-radius: 15px;
        overflow: hidden;
        margin-bottom: 20px;
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .product-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s;
    }

    .product-card:hover .product-image {
        transform: scale(1.05);
    }

    .image-placeholder {
        color: #6c757d;
        font-size: 3rem;
        opacity: 0.3;
    }

    .product-info {
        text-align: center;
    }

    .product-name {
        font-size: 1.3rem;
        font-weight: bold;
        color: #2c3e50;
        margin-bottom: 10px;
        line-height: 1.4;
    }

    .product-description {
        color: #6c757d;
        font-size: 0.95rem;
        margin-bottom: 15px;
        line-height: 1.5;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .product-price {
        font-size: 1.6rem;
        font-weight: bold;
        color: #e74c3c;
        margin-bottom: 20px;
    }

    .product-actions {
        display: flex;
        gap: 12px;
        justify-content: center;
    }

    .btn-action {
        padding: 10px 20px;
        border-radius: 8px;
        border: none;
        font-size: 0.9rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 6px;
    }

    .btn-edit {
        background: #3498db;
        color: white;
    }

    .btn-edit:hover {
        background: #2980b9;
        color: white;
        text-decoration: none;
        transform: translateY(-2px);
    }

    .btn-delete {
        background: #e74c3c;
        color: white;
    }

    .btn-delete:hover {
        background: #c0392b;
        color: white;
        transform: translateY(-2px);
    }

    .empty-state {
        text-align: center;
        padding: 80px 20px;
        background: white;
        border-radius: 20px;
        box-shadow: 0 2px 15px rgba(0,0,0,0.08);
    }

    .empty-icon {
        font-size: 5rem;
        margin-bottom: 25px;
        opacity: 0.3;
    }

    .empty-state h2 {
        color: #2c3e50;
        margin-bottom: 15px;
        font-size: 1.8rem;
    }

    .empty-state p {
        color: #6c757d;
        margin-bottom: 30px;
        font-size: 1.1rem;
        line-height: 1.6;
    }

    .alert {
        border-radius: 12px;
        padding: 15px 20px;
        margin-bottom: 25px;
        border: none;
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .alert-success {
        background: linear-gradient(135deg, #d4edda 0%, #c3e6cb 100%);
        color: #155724;
    }

    .alert-danger {
        background: linear-gradient(135deg, #f8d7da 0%, #f5c6cb 100%);
        color: #721c24;
    }

    /* Debug info para imágenes */
    .debug-image-info {
        position: absolute;
        top: 5px;
        left: 5px;
        background: rgba(0,0,0,0.7);
        color: white;
        padding: 2px 6px;
        border-radius: 4px;
        font-size: 0.7rem;
        font-family: monospace;
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .page-header {
            flex-direction: column;
            text-align: center;
        }

        .products-grid {
            grid-template-columns: 1fr;
        }

        .quick-stats {
            grid-template-columns: repeat(2, 1fr);
        }

        .search-box {
            max-width: 100%;
        }
    }
</style>

<div class="menu-management-page">
    <div class="menu-container">
        <!-- Header -->
        <div class="page-header">
            <div class="header-info">
                <h1>??? Gestionar Menú</h1>
                <p>Administra los productos de <strong>@Model.Nombre</strong></p>
            </div>
            <div class="header-actions">
                <a href="@Url.Action("Index")" class="btn btn-back">
                    ? Volver al Dashboard
                </a>
                <a href="@Url.Action("CrearProducto")" class="btn btn-create">
                    + Agregar Producto
                </a>
            </div>
        </div>

        <!-- Estadísticas rápidas -->
        <div class="quick-stats">
            <div class="stat-card">
                <span class="stat-number">@(Model.MenuItems?.Count() ?? 0)</span>
                <div class="stat-label">Total Productos</div>
            </div>
            <div class="stat-card">
                <span class="stat-number">$@((Model.MenuItems?.Any() == true ? Model.MenuItems.Average(m => m.Precio) : 0).ToString("F2"))</span>
                <div class="stat-label">Precio Promedio</div>
            </div>
            <div class="stat-card">
                <span class="stat-number">$@((Model.MenuItems?.Any() == true ? Model.MenuItems.Min(m => m.Precio) : 0).ToString("F2"))</span>
                <div class="stat-label">Más Barato</div>
            </div>
            <div class="stat-card">
                <span class="stat-number">$@((Model.MenuItems?.Any() == true ? Model.MenuItems.Max(m => m.Precio) : 0).ToString("F2"))</span>
                <div class="stat-label">Más Caro</div>
            </div>
        </div>

        <!-- Alertas -->
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success" id="successAlert">
                <span>?</span>
                <span><strong>¡Éxito!</strong> @TempData["Success"]</span>
            </div>
        }

        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger" id="errorAlert">
                <span>?</span>
                <span><strong>Error:</strong> @TempData["Error"]</span>
            </div>
        }

        <!-- Filtros -->
        <div class="filters-section">
            <div class="search-box">
                <input type="text" placeholder="Buscar productos por nombre o descripción..." id="searchInput">
                <span class="search-icon">??</span>
            </div>
        </div>

        <!-- Grid de productos -->
        @if (Model.MenuItems != null && Model.MenuItems.Any())
        {
            <div class="products-grid" id="productsGrid">
                @foreach (var item in Model.MenuItems)
                {
                    <div class="product-card" data-name="@item.Nombre.ToLower()" data-description="@item.Descripcion.ToLower()">
                        <div class="product-image-container">
                            @if (!string.IsNullOrEmpty(item.ImagenUrl))
                            {
                                <!-- ?? SOLUCIÓN: Usar ID en lugar de nombre -->
                                <img src="~/images/items/restaurant_@(Model.Id)/@item.ImagenUrl" 
                                     alt="@item.Nombre" 
                                     class="product-image"
                                     onerror="console.error('? Error cargando imagen:', this.src); this.style.display='none'; this.parentElement.innerHTML='<div class=&quot;image-placeholder&quot;>???</div><div class=&quot;debug-image-info&quot;>Error: @item.ImagenUrl</div>';"
                                     style="opacity: 0; transition: opacity 0.3s;"
                                     onload="console.log('? Imagen cargada:', this.src); this.style.opacity='1';">
                                
                                <!-- ?? Debug info -->
                                <div class="debug-image-info">@item.ImagenUrl</div>
                            }
                            else
                            {
                                <div class="image-placeholder">???</div>
                                <div class="debug-image-info">Sin imagen</div>
                            }
                        </div>
                        
                        <div class="product-info">
                            <h3 class="product-name">@item.Nombre</h3>
                            <p class="product-description">@item.Descripcion</p>
                            <div class="product-price">$@item.Precio.ToString("F2")</div>
                            
                            <div class="product-actions">
                                <a href="@Url.Action("EditarProducto", new { id = item.Id })" class="btn-action btn-edit">
                                    ?? Editar
                                </a>
                                <button type="button" onclick="confirmarEliminacion(@item.Id, '@item.Nombre')" class="btn-action btn-delete">
                                    ??? Eliminar
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-state">
                <div class="empty-icon">???</div>
                <h2>No tienes productos en tu menú</h2>
                <p>¡Comienza agregando tu primer producto para que los clientes puedan hacer pedidos!</p>
                <a href="@Url.Action("CrearProducto")" class="btn btn-create">
                    + Crear mi primer producto
                </a>
            </div>
        }
    </div>
</div>

<!-- ?? Debug panel MEJORADO -->
<div style="position: fixed; bottom: 10px; right: 10px; background: rgba(0,0,0,0.8); color: white; padding: 10px; border-radius: 8px; font-family: monospace; font-size: 0.8rem; max-width: 400px;">
    <div><strong>?? DEBUG INFO - NUEVA ESTRUCTURA:</strong></div>
    <div>Restaurant ID: @Model.Id</div>
    <div>Nombre actual: "@Model.Nombre"</div>
    <div>Total productos: @(Model.MenuItems?.Count() ?? 0)</div>
    @if (Model.MenuItems?.Any() == true)
    {
        <div>Primer producto: @Model.MenuItems.First().ImagenUrl</div>
        <div style="color: #4caf50;"><strong>Ruta MEJORADA:</strong></div>
        <div>/images/items/restaurant_@(Model.Id)/</div>
    }
    <div style="color: #4caf50; font-size: 0.7rem; margin-top: 5px;">
        ? Resistente a cambios de nombre
    </div>
</div>

<!-- Modal de confirmación para eliminar -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content" style="border-radius: 15px; border: none;">
            <div class="modal-header" style="border-bottom: 1px solid #e9ecef;">
                <h5 class="modal-title">??? Confirmar eliminación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" style="padding: 25px;">
                <p>¿Estás seguro de que deseas eliminar el producto <strong id="productNameToDelete"></strong>?</p>
                <p class="text-muted mb-0">?? Esta acción no se puede deshacer.</p>
            </div>
            <div class="modal-footer" style="border-top: 1px solid #e9ecef; padding: 20px;">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">??? Eliminar</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            console.log('?? GestionarMenu cargado - ESTRUCTURA MEJORADA');
            console.log('?? Restaurant ID:', @Model.Id);
            console.log('?? Nombre actual:', '@Model.Nombre');
            console.log('?? Carpeta sugerida: restaurant_@(Model.Id)');
            console.log('?? Total productos:', @(Model.MenuItems?.Count() ?? 0));
            
            @if (Model.MenuItems?.Any() == true)
            {
                @foreach (var item in Model.MenuItems)
                {
                    <text>console.log('??? Producto: @item.Nombre - Imagen: @item.ImagenUrl - Ruta MEJORADA: /images/items/restaurant_@(Model.Id)/@item.ImagenUrl');</text>
                }
            }

            // Referencias
            const searchInput = document.getElementById('searchInput');
            const productCards = document.querySelectorAll('.product-card');

            // Búsqueda
            if (searchInput && productCards.length > 0) {
                searchInput.addEventListener('input', function() {
                    const searchTerm = this.value.toLowerCase().trim();
                    
                    productCards.forEach(card => {
                        const name = card.getAttribute('data-name') || '';
                        const description = card.getAttribute('data-description') || '';

                        if (searchTerm === '' || name.includes(searchTerm) || description.includes(searchTerm)) {
                            card.style.display = 'block';
                        } else {
                            card.style.display = 'none';
                        }
                    });
                });
            }

            // Auto-dismiss alertas
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                setTimeout(() => {
                    if (alert.parentNode) {
                        alert.style.transition = 'all 0.5s ease';
                        alert.style.opacity = '0';
                        alert.style.transform = 'translateY(-20px)';
                        
                        setTimeout(() => {
                            if (alert.parentNode) {
                                alert.remove();
                            }
                        }, 500);
                    }
                }, 5000);
            });

            console.log('? Scripts inicializados - Usando estructura basada en ID');
            console.warn('?? ACCIÓN REQUERIDA: Reorganizar carpetas físicas para usar restaurant_ID');
        });

        // Función para confirmar eliminación
        function confirmarEliminacion(productId, productName) {
            const nameElement = document.getElementById('productNameToDelete');
            const formElement = document.getElementById('deleteForm');
            
            if (nameElement && formElement) {
                nameElement.textContent = productName;
                formElement.action = '@Url.Action("EliminarProducto")/' + productId;
                
                // Usar Bootstrap Modal o fallback
                const modalElement = document.getElementById('deleteModal');
                if (modalElement && typeof bootstrap !== 'undefined') {
                    const modal = new bootstrap.Modal(modalElement);
                    modal.show();
                } else {
                    const confirmDelete = confirm('¿Estás seguro de que deseas eliminar "' + productName + '"?');
                    if (confirmDelete) {
                        formElement.submit();
                    }
                }
            }
        }
    </script>
}