@model TechFood_Solutions.Models.Restaurant

@{
    ViewData["Title"] = "Gestionar Menú - " + Model.Nombre;
}

<style>
    .gestionar-menu-page {
        padding: 20px 0;
        background-color: #f8f9fa;
        min-height: calc(100vh - 120px);
    }

    .gestionar-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 15px;
    }

    /* Header */
    .page-header {
        background: linear-gradient(135deg, #8e44ad, #7d3c98);
        color: white;
        border-radius: 20px;
        padding: 30px;
        margin-bottom: 30px;
        box-shadow: 0 4px 15px rgba(142, 68, 173, 0.3);
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .header-info h1 {
        font-size: 2.5rem;
        margin-bottom: 10px;
        font-weight: bold;
    }

    .header-info p {
        opacity: 0.9;
        font-size: 1.1rem;
    }

    .header-actions {
        display: flex;
        gap: 15px;
    }

    .header-btn {
        padding: 12px 25px;
        background: rgba(255,255,255,0.2);
        color: white;
        border: 2px solid rgba(255,255,255,0.3);
        border-radius: 10px;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.3s;
    }

    .header-btn:hover {
        background: white;
        color: #8e44ad;
        text-decoration: none;
    }

    /* Restaurant Info Card */
    .restaurant-info-card {
        background: white;
        border-radius: 15px;
        padding: 20px;
        margin-bottom: 30px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
        display: flex;
        align-items: center;
        gap: 20px;
        border-left: 4px solid #8e44ad;
    }

    .restaurant-logo {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        object-fit: cover;
        border: 3px solid #e0e0e0;
    }

    .restaurant-details h3 {
        margin: 0 0 8px 0;
        font-size: 1.4rem;
        color: #2c3e50;
    }

    .restaurant-details p {
        margin: 0 0 8px 0;
        color: #7f8c8d;
        font-size: 1rem;
    }

    .stats-mini {
        display: flex;
        gap: 20px;
        font-size: 0.9rem;
        color: #8e44ad;
        font-weight: 600;
    }

    /* Menu Section */
    .menu-section {
        background: white;
        border-radius: 20px;
        padding: 30px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
    }

    .section-header {
        display: flex;
        justify-content: between;
        align-items: center;
        margin-bottom: 30px;
        padding-bottom: 20px;
        border-bottom: 2px solid #f0f0f0;
    }

    .section-title {
        font-size: 1.8rem;
        color: #2c3e50;
        font-weight: bold;
    }

    .menu-count {
        color: #7f8c8d;
        font-size: 1rem;
        margin-left: 10px;
    }

    /* Products Grid */
    .products-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 25px;
    }

    .product-card {
        background: #f8f9fa;
        border-radius: 15px;
        padding: 20px;
        transition: all 0.3s;
        border: 2px solid transparent;
        position: relative;
        overflow: hidden;
    }

    .product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        border-color: #8e44ad;
    }

    .product-image-container {
        position: relative;
        margin-bottom: 15px;
        border-radius: 12px;
        overflow: hidden;
        height: 180px;
        background: white;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .product-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .image-placeholder {
        color: #6c757d;
        font-size: 3rem;
        opacity: 0.3;
    }

    /* BOTONES REUBICADOS DEBAJO DE LA IMAGEN */
    .product-actions {
        display: flex;
        gap: 10px;
        justify-content: center;
        margin-bottom: 15px;
    }

    .action-btn {
        padding: 8px 15px;
        border-radius: 8px;
        border: none;
        display: flex;
        align-items: center;
        gap: 8px;
        cursor: pointer;
        transition: all 0.3s;
        text-decoration: none;
        font-size: 0.9rem;
        font-weight: 600;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .edit-action {
        background: #3498db;
        color: white;
    }

    .edit-action:hover {
        background: #2980b9;
        transform: translateY(-2px);
        color: white;
        text-decoration: none;
    }

    .delete-action {
        background: #e74c3c;
        color: white;
    }

    .delete-action:hover {
        background: #c0392b;
        transform: translateY(-2px);
    }

    .product-info {
        text-align: center;
    }

    .product-name {
        font-size: 1.2rem;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 8px;
        line-height: 1.3;
    }

    .product-description {
        color: #7f8c8d;
        font-size: 0.9rem;
        line-height: 1.4;
        margin-bottom: 12px;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .product-price {
        font-size: 1.3rem;
        font-weight: bold;
        color: #8e44ad;
    }

    /* ESTADO VACÍO ELEGANTE */
    .empty-menu-state {
        text-align: center;
        padding: 80px 40px;
        color: #6c757d;
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        border-radius: 20px;
        border: 2px dashed #d0d0d0;
        transition: all 0.3s;
    }

    .empty-menu-state:hover {
        border-color: #8e44ad;
        background: linear-gradient(135deg, #f4f1f7 0%, #ebe5f0 100%);
    }

    .empty-icon {
        font-size: 5rem;
        margin-bottom: 25px;
        opacity: 0.3;
        display: block;
    }

    .empty-title {
        font-size: 1.8rem;
        color: #2c3e50;
        margin-bottom: 15px;
        font-weight: 600;
    }

    .empty-description {
        font-size: 1.1rem;
        margin-bottom: 30px;
        opacity: 0.8;
        max-width: 500px;
        margin-left: auto;
        margin-right: auto;
        line-height: 1.6;
    }

    .empty-actions {
        display: flex;
        gap: 15px;
        justify-content: center;
        flex-wrap: wrap;
    }

    .empty-action-btn {
        display: inline-flex;
        align-items: center;
        gap: 10px;
        padding: 15px 30px;
        border-radius: 12px;
        text-decoration: none;
        font-weight: 600;
        font-size: 1.1rem;
        transition: all 0.3s;
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    }

    .primary-action {
        background: #8e44ad;
        color: white;
        box-shadow: 0 4px 15px rgba(142, 68, 173, 0.3);
    }

    .primary-action:hover {
        background: #7d3c98;
        color: white;
        text-decoration: none;
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(142, 68, 173, 0.4);
    }

    .secondary-action {
        background: white;
        color: #8e44ad;
        border: 2px solid #8e44ad;
    }

    .secondary-action:hover {
        background: #8e44ad;
        color: white;
        text-decoration: none;
        transform: translateY(-2px);
    }

    /* Filter Bar */
    .filter-bar {
        display: flex;
        justify-content: between;
        align-items: center;
        margin-bottom: 25px;
        padding: 15px 20px;
        background: #f8f9fa;
        border-radius: 12px;
    }

    .search-box {
        flex: 1;
        max-width: 300px;
        position: relative;
    }

    .search-input {
        width: 100%;
        padding: 10px 15px 10px 40px;
        border: 2px solid #e0e0e0;
        border-radius: 8px;
        font-size: 0.9rem;
    }

    .search-input:focus {
        border-color: #8e44ad;
        outline: none;
    }

    .search-icon {
        position: absolute;
        left: 12px;
        top: 50%;
        transform: translateY(-50%);
        color: #7f8c8d;
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .header-content {
            flex-direction: column;
            gap: 20px;
            text-align: center;
        }

        .restaurant-info-card {
            flex-direction: column;
            text-align: center;
        }

        .products-grid {
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
        }

        .filter-bar {
            flex-direction: column;
            gap: 15px;
        }

        .empty-icon {
            font-size: 4rem;
        }

        .empty-title {
            font-size: 1.5rem;
        }

        .empty-actions {
            flex-direction: column;
            align-items: center;
        }

        .product-actions {
            flex-direction: column;
            gap: 8px;
        }
    }
</style>

<div class="gestionar-menu-page">
    <div class="gestionar-container">
        <!-- Header -->
        <div class="page-header">
            <div class="header-content">
                <div class="header-info">
                    <h1>Gestionar Menú</h1>
                    <p>Administra los productos de tu restaurante</p>
                </div>
                <div class="header-actions">
                    <a href="@Url.Action("Index")" class="header-btn">
                        Dashboard
                    </a>
                    <a href="@Url.Action("CrearProducto")" class="header-btn">
                        Nuevo Producto
                    </a>
                </div>
            </div>
        </div>

        <!-- Restaurant Info -->
        <div class="restaurant-info-card">
            <img src="~/images/restaurantes/@Model.LogoUrl" 
                 alt="@Model.Nombre" 
                 class="restaurant-logo"
                 onerror="this.src='/images/default-restaurant.png';">
            <div class="restaurant-details">
                <h3>@Model.Nombre</h3>
                <p>@Model.Descripcion</p>
                <div class="stats-mini">
                    <span>@(Model.MenuItems?.Count() ?? 0) productos</span>
                    <span>Promedio: $@((Model.MenuItems?.Any() == true ? Model.MenuItems.Average(m => m.Precio) : 0).ToString("F2"))</span>
                </div>
            </div>
        </div>

        <!-- Menu Section -->
        <div class="menu-section">
            <div class="section-header">
                <h2 class="section-title">
                    Productos del Menú
                    <span class="menu-count">(@(Model.MenuItems?.Count() ?? 0) productos)</span>
                </h2>
            </div>

            @if (Model.MenuItems != null && Model.MenuItems.Any())
            {
                <!-- Filter Bar -->
                <div class="filter-bar">
                    <div class="search-box">
                        <input type="text" class="search-input" placeholder="Buscar productos..." id="searchInput">
                    </div>
                </div>

                <!-- Products Grid -->
                <div class="products-grid" id="productsGrid">
                    @foreach (var item in Model.MenuItems)
                    {
                        <div class="product-card" data-name="@item.Nombre.ToLower()" data-description="@item.Descripcion.ToLower()">
                            <div class="product-image-container">
                                @if (!string.IsNullOrEmpty(item.ImagenUrl))
                                {
                                    <img src="~/images/items/restaurant_@(Model.Id)/@item.ImagenUrl" 
                                         alt="@item.Nombre" 
                                         class="product-image"
                                         onerror="this.style.display='none'; this.parentElement.innerHTML='<div class=&quot;image-placeholder&quot;>???</div>';">
                                }
                                else
                                {
                                    <div class="image-placeholder">???</div>
                                }
                            </div>
                            
                            <!-- BOTONES PARA EDITAR O ELIMINAR PRODUCTO -->
                            <div class="product-actions">
                                <a href="@Url.Action("EditarProducto", new { id = item.Id })" class="action-btn edit-action" title="Editar producto">
                                    Editar
                                </a>
                                <button class="action-btn delete-action" 
                                        onclick="confirmarEliminacion('@item.Id', '@item.Nombre')" 
                                        title="Eliminar producto">
                                    Eliminar
                                </button>
                            </div>

                            <div class="product-info">
                                <h3 class="product-name">@item.Nombre</h3>
                                <p class="product-description">@item.Descripcion</p>
                                <div class="product-price">$@item.Precio.ToString("F2")</div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <!-- ESTADO VACÍO ELEGANTE -->
                <div class="empty-menu-state">
                    <div class="empty-icon">???</div>
                    <div class="empty-title">Sin Productos en el Menú</div>
                    <div class="empty-description">
                        Tu restaurante aún no tiene productos en el menú. Empieza agregando tus deliciosos platillos 
                        para que los clientes puedan descubrir y disfrutar de tu cocina.
                    </div>
                    <div class="empty-actions">
                        <a href="@Url.Action("CrearProducto")" class="empty-action-btn primary-action">
                            Crear primer producto
                        </a>
                        <a href="@Url.Action("Index")" class="empty-action-btn secondary-action">
                            Volver al Dashboard
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal de confirmación para eliminar -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirmar Eliminación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>¿Estás seguro de que quieres eliminar el producto <strong id="productName"></strong>?</p>
                <p class="text-muted">Esta acción no se puede deshacer.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <form method="post" style="display: inline;" id="deleteForm">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">Eliminar Producto</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Funcionalidad de búsqueda
            const searchInput = document.getElementById('searchInput');
            const productsGrid = document.getElementById('productsGrid');
            
            if (searchInput && productsGrid) {
                searchInput.addEventListener('input', function() {
                    const searchTerm = this.value.toLowerCase();
                    const productCards = productsGrid.querySelectorAll('.product-card');
                    
                    productCards.forEach(card => {
                        const name = card.dataset.name;
                        const description = card.dataset.description;
                        
                        if (name.includes(searchTerm) || description.includes(searchTerm)) {
                            card.style.display = 'block';
                        } else {
                            card.style.display = 'none';
                        }
                    });
                });
            }
        });

        // Función para confirmar eliminación
        function confirmarEliminacion(productId, productName) {
            document.getElementById('productName').textContent = productName;
            document.getElementById('deleteForm').action = '@Url.Action("EliminarProducto")/' + productId;
            
            const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            deleteModal.show();
        }
    </script>
}