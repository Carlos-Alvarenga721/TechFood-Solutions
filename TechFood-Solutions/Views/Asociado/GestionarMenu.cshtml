@model TechFood_Solutions.Models.Restaurant

@{
    ViewData["Title"] = "Gestionar Menú - " + Model.Nombre;
}

<style>
    .menu-management-page {
        padding: 20px 0;
        background-color: #f8f9fa;
        min-height: calc(100vh - 120px);
    }

    .menu-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 15px;
    }

    .page-header {
        background: white;
        border-radius: 20px;
        padding: 30px;
        margin-bottom: 30px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .header-info h1 {
        font-size: 2rem;
        color: #2c3e50;
        margin-bottom: 5px;
    }

    .header-info p {
        color: #7f8c8d;
        margin: 0;
    }

    .header-actions {
        display: flex;
        gap: 15px;
    }

    .btn-create {
        background: #27ae60;
        color: white;
        padding: 12px 25px;
        border-radius: 10px;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.3s;
        box-shadow: 0 4px 15px rgba(39, 174, 96, 0.3);
    }

    .btn-create:hover {
        background: #219a52;
        color: white;
        text-decoration: none;
        transform: translateY(-2px);
    }

    .btn-back {
        background: #6c757d;
        color: white;
        padding: 12px 25px;
        border-radius: 10px;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.3s;
    }

    .btn-back:hover {
        background: #5a6268;
        color: white;
        text-decoration: none;
        transform: translateY(-2px);
    }

    /* Stats rápidas */
    .quick-stats {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .stat-card {
        background: white;
        border-radius: 15px;
        padding: 20px;
        text-align: center;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
    }

    .stat-number {
        font-size: 2rem;
        font-weight: bold;
        color: #e74c3c;
        margin-bottom: 5px;
    }

    .stat-label {
        color: #7f8c8d;
        font-size: 0.9rem;
    }

    /* Filtros */
    .filters-section {
        background: white;
        border-radius: 15px;
        padding: 20px 30px;
        margin-bottom: 30px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
        display: flex;
        gap: 15px;
        align-items: center;
        flex-wrap: wrap;
    }

    .search-box {
        flex: 1;
        min-width: 250px;
        position: relative;
    }

    .search-box input {
        width: 100%;
        padding: 12px 45px 12px 20px;
        border: 2px solid #e0e0e0;
        border-radius: 10px;
        font-size: 1rem;
        transition: border-color 0.3s;
    }

    .search-box input:focus {
        outline: none;
        border-color: #e74c3c;
    }

    .search-icon {
        position: absolute;
        right: 15px;
        top: 50%;
        transform: translateY(-50%);
        color: #7f8c8d;
    }

    /* Grid de productos */
    .products-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 25px;
    }

    .product-card {
        background: white;
        border-radius: 20px;
        padding: 20px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
        transition: transform 0.3s, box-shadow 0.3s;
        position: relative;
    }

    .product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0,0,0,0.15);
    }

    .product-image-container {
        position: relative;
        height: 200px;
        border-radius: 15px;
        overflow: hidden;
        margin-bottom: 15px;
        background: #f8f9fa;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .product-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .product-actions {
        position: absolute;
        top: 10px;
        right: 10px;
        display: flex;
        flex-direction: column;
        gap: 8px;
    }

    .action-btn {
        width: 35px;
        height: 35px;
        border-radius: 50%;
        border: none;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.9rem;
        cursor: pointer;
        transition: all 0.3s;
        box-shadow: 0 2px 8px rgba(0,0,0,0.15);
    }

    .btn-edit {
        background: #3498db;
        color: white;
    }

    .btn-edit:hover {
        background: #2980b9;
        transform: scale(1.1);
    }

    .btn-delete {
        background: #e74c3c;
        color: white;
    }

    .btn-delete:hover {
        background: #c0392b;
        transform: scale(1.1);
    }

    .product-info {
        text-align: center;
    }

    .product-name {
        font-size: 1.2rem;
        font-weight: bold;
        color: #2c3e50;
        margin-bottom: 8px;
    }

    .product-description {
        color: #7f8c8d;
        font-size: 0.9rem;
        margin-bottom: 12px;
        line-height: 1.4;
    }

    .product-price {
        font-size: 1.4rem;
        font-weight: bold;
        color: #e74c3c;
        margin-bottom: 15px;
    }

    .product-actions-bottom {
        display: flex;
        gap: 10px;
        justify-content: center;
    }

    .btn-action {
        padding: 8px 20px;
        border-radius: 8px;
        border: none;
        font-size: 0.9rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 5px;
    }

    .btn-edit-bottom {
        background: #3498db;
        color: white;
    }

    .btn-edit-bottom:hover {
        background: #2980b9;
        color: white;
        text-decoration: none;
    }

    .btn-delete-bottom {
        background: #e74c3c;
        color: white;
    }

    .btn-delete-bottom:hover {
        background: #c0392b;
        color: white;
    }

    /* Estado vacío */
    .empty-state {
        text-align: center;
        padding: 60px 20px;
        background: white;
        border-radius: 20px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
    }

    .empty-icon {
        font-size: 4rem;
        margin-bottom: 20px;
        opacity: 0.3;
    }

    .empty-state h2 {
        color: #7f8c8d;
        margin-bottom: 15px;
    }

    .empty-state p {
        color: #95a5a6;
        margin-bottom: 30px;
    }

    /* Responsive */
    @@media (max-width: 768px) {
        .page-header {
            flex-direction: column;
            gap: 20px;
            text-align: center;
        }

        .header-actions {
            justify-content: center;
        }

        .products-grid {
            grid-template-columns: 1fr;
        }

        .quick-stats {
            grid-template-columns: repeat(2, 1fr);
        }
    }
</style>

<div class="menu-management-page">
    <div class="menu-container">
        <!-- Header -->
        <div class="page-header">
            <div class="header-info">
                <h1>Gestionar Menú</h1>
                <p>Administra los productos de <strong>@Model.Nombre</strong></p>
            </div>
            <div class="header-actions">
                <a href="@Url.Action("Index")" class="btn-back">
                    Volver al Dashboard
                </a>
                <a href="@Url.Action("CrearProducto")" class="btn-create">
                    + Agregar Producto
                </a>
            </div>
        </div>

        <!-- Estadísticas rápidas -->
        <div class="quick-stats">
            <div class="stat-card">
                <div class="stat-number">@(Model.MenuItems?.Count() ?? 0)</div>
                <div class="stat-label">Total Productos</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">$@((Model.MenuItems?.Any() == true ? Model.MenuItems.Average(m => m.Precio) : 0).ToString("F2"))</div>
                <div class="stat-label">Precio Promedio</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">$@((Model.MenuItems?.Any() == true ? Model.MenuItems.Min(m => m.Precio) : 0).ToString("F2"))</div>
                <div class="stat-label">Más Barato</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">$@((Model.MenuItems?.Any() == true ? Model.MenuItems.Max(m => m.Precio) : 0).ToString("F2"))</div>
                <div class="stat-label">Más Caro</div>
            </div>
        </div>

        <!-- Filtros -->
        <div class="filters-section">
            <div class="search-box">
                <input type="text" placeholder="Buscar productos..." id="searchInput">
            </div>
        </div>

        <!-- Alertas -->
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show">
                <strong>¡Éxito!</strong> @TempData["Success"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        <!-- Grid de productos -->
        @if (Model.MenuItems != null && Model.MenuItems.Any())
        {
            <div class="products-grid">
                @foreach (var item in Model.MenuItems)
                {
                    <div class="product-card" data-product-name="@item.Nombre.ToLower()" data-product-description="@item.Descripcion.ToLower()">
                        <div class="product-image-container">
                            <img src="~/images/items/@Model.Nombre/@item.ImagenUrl" alt="@item.Nombre" class="product-image"
                                 onerror="this.src='/images/default-food.png';">
                            
                        </div>
                        
                        <div class="product-info">
                            <h3 class="product-name">@item.Nombre</h3>
                            <p class="product-description">@item.Descripcion</p>
                            <div class="product-price">$@item.Precio.ToString("F2")</div>
                            
                            <div class="product-actions-bottom">
                                <a href="@Url.Action("EditarProducto", new { id = item.Id })" class="btn-action btn-edit-bottom">
                                    Editar
                                </a>
                                <button onclick="confirmarEliminacion(@item.Id, '@item.Nombre')" class="btn-action btn-delete-bottom">
                                    Eliminar
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-state">
                <div class="empty-icon">???</div>
                <h2>No tienes productos en tu menú</h2>
                <p>¡Comienza agregando tu primer producto para que los clientes puedan hacer pedidos!</p>
                <a href="@Url.Action("CrearProducto")" class="btn-create">
                    + Crear mi primer producto
                </a>
            </div>
        }
    </div>
</div>

<!-- Modal de confirmación -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirmar eliminación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>¿Estás seguro de que deseas eliminar el producto <strong id="productNameToDelete"></strong>?</p>
                <p class="text-muted">Esta acción no se puede deshacer.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">Eliminar</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Búsqueda en tiempo real
        const searchInput = document.getElementById('searchInput');
        const productCards = document.querySelectorAll('.product-card');

        searchInput.addEventListener('input', function() {
            const searchTerm = this.value.toLowerCase();

            productCards.forEach(card => {
                const name = card.getAttribute('data-product-name');
                const description = card.getAttribute('data-product-description');

                if (name.includes(searchTerm) || description.includes(searchTerm)) {
                    card.style.display = 'block';
                } else {
                    card.style.display = 'none';
                }
            });
        });

        // Confirmar eliminación
        function confirmarEliminacion(productId, productName) {
            document.getElementById('productNameToDelete').textContent = productName;
            document.getElementById('deleteForm').action = '@Url.Action("EliminarProducto")/' + productId;
            
            const modal = new bootstrap.Modal(document.getElementById('deleteModal'));
            modal.show();
        }

        // Auto-dismiss alerts
        setTimeout(function() {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                if (alert.classList.contains('show')) {
                    alert.classList.remove('show');
                    setTimeout(() => alert.remove(), 150);
                }
            });
        }, 5000);

        // Animaciones de entrada
        document.addEventListener('DOMContentLoaded', function() {
            const cards = document.querySelectorAll('.product-card');
            cards.forEach((card, index) => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';
                setTimeout(() => {
                    card.style.transition = 'all 0.5s ease';
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                }, index * 100);
            });
        });
    </script>
}