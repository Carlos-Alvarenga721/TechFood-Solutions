@model TechFood_Solutions.Models.Cart

@{
    ViewData["Title"] = "Carrito";
}

<style>
    .cart-page {
        padding: 40px 0;
        background-color: #f8f9fa;
        min-height: calc(100vh - 200px);
    }

    .cart-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 0 15px;
    }

    /* Breadcrumb */
    .breadcrumb-nav {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-bottom: 30px;
        font-size: 0.95rem;
        color: #7f8c8d;
    }

        .breadcrumb-nav a {
            color: #7f8c8d;
            text-decoration: none;
            transition: color 0.3s;
        }

            .breadcrumb-nav a:hover {
                color: #2c3e50;
            }

        .breadcrumb-nav .current {
            color: #2c3e50;
            font-weight: 600;
        }

    /* Layout principal */
    .cart-layout {
        display: grid;
        grid-template-columns: 1fr 400px;
        gap: 30px;
        align-items: start;
    }

    /* Lista de productos */
    .cart-items-section {
        background: white;
        border-radius: 15px;
        padding: 30px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
    }

    .cart-header {
        display: grid;
        grid-template-columns: 2fr 1fr 1fr 1fr;
        padding-bottom: 15px;
        border-bottom: 2px solid #f0f0f0;
        margin-bottom: 20px;
        font-weight: 600;
        color: #2c3e50;
    }

    .cart-item {
        display: grid;
        grid-template-columns: 2fr 1fr 1fr 1fr;
        align-items: center;
        padding: 20px 0;
        border-bottom: 1px solid #f0f0f0;
        position: relative;
    }

    .product-info {
        display: flex;
        gap: 15px;
        align-items: center;
    }

    .product-image {
        width: 80px;
        height: 80px;
        border-radius: 10px;
        object-fit: cover;
        position: relative;
    }

    .remove-btn {
        position: absolute;
        top: -8px;
        left: -8px;
        width: 24px;
        height: 24px;
        background: #e74c3c;
        border: 2px solid white;
        border-radius: 50%;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        font-size: 0.8rem;
        transition: all 0.3s;
        z-index: 1;
    }

        .remove-btn:hover {
            background: #c0392b;
            transform: scale(1.1);
        }

    .product-details h3 {
        font-size: 1.1rem;
        color: #2c3e50;
        margin: 0 0 5px 0;
    }

    .product-details p {
        font-size: 0.9rem;
        color: #7f8c8d;
        margin: 0;
    }

    .price-cell {
        font-size: 1.1rem;
        color: #2c3e50;
        font-weight: 600;
    }

    .quantity-control {
        display: flex;
        align-items: center;
        border: 2px solid #e0e0e0;
        border-radius: 8px;
        width: fit-content;
        overflow: hidden;
    }

    .quantity-btn {
        width: 32px;
        height: 32px;
        background: white;
        border: none;
        cursor: pointer;
        font-size: 1.2rem;
        color: #7f8c8d;
        transition: all 0.3s;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .quantity-btn:hover {
            background: #f8f9fa;
            color: #2c3e50;
        }

    .quantity-input {
        width: 45px;
        height: 32px;
        border: none;
        text-align: center;
        font-size: 1rem;
        font-weight: 600;
        color: #2c3e50;
    }

        .quantity-input::-webkit-inner-spin-button,
        .quantity-input::-webkit-outer-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

    .subtotal-cell {
        font-size: 1.2rem;
        color: #2c3e50;
        font-weight: bold;
    }

    /* Botones de acción */
    .cart-actions {
        display: flex;
        justify-content: space-between;
        margin-top: 30px;
        padding-top: 20px;
        border-top: 2px solid #f0f0f0;
    }

    .back-btn {
        padding: 12px 30px;
        background: white;
        border: 2px solid #e0e0e0;
        border-radius: 10px;
        color: #2c3e50;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s;
        text-decoration: none;
        display: inline-block;
    }

        .back-btn:hover {
            border-color: #2c3e50;
            background: #f8f9fa;
        }

    .add-more-btn {
        padding: 12px 30px;
        background: white;
        border: 2px solid #e74c3c;
        border-radius: 10px;
        color: #e74c3c;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s;
        text-decoration: none;
        display: inline-block;
    }

        .add-more-btn:hover {
            background: #e74c3c;
            color: white;
        }

    /* Panel de resumen y cupón */
    .cart-summary-container {
        display: flex;
        flex-direction: column;
        gap: 20px;
        position: sticky;
        top: 20px;
    }

    /* Cupón */
    .coupon-section {
        background: white;
        border-radius: 15px;
        padding: 25px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
    }

    .coupon-form {
        display: flex;
        gap: 10px;
    }

    .coupon-input {
        flex: 1;
        padding: 12px 20px;
        border: 2px solid #e0e0e0;
        border-radius: 10px;
        font-size: 1rem;
    }

        .coupon-input:focus {
            outline: none;
            border-color: #e74c3c;
        }

    .apply-coupon-btn {
        padding: 12px 25px;
        background: #e74c3c;
        border: none;
        border-radius: 10px;
        color: white;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s;
        box-shadow: 0 4px 15px rgba(231, 76, 60, 0.3);
    }

        .apply-coupon-btn:hover {
            background: #c0392b;
            transform: translateY(-2px);
        }

    /* Resumen */
    .summary-section {
        background: white;
        border-radius: 15px;
        padding: 30px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
    }

    .summary-title {
        font-size: 1.5rem;
        color: #2c3e50;
        font-weight: bold;
        margin-bottom: 20px;
    }

    .summary-row {
        display: flex;
        justify-content: space-between;
        padding: 12px 0;
        border-bottom: 1px solid #f0f0f0;
    }

    .summary-label {
        color: #7f8c8d;
        font-size: 1rem;
    }

    .summary-value {
        color: #2c3e50;
        font-size: 1rem;
        font-weight: 600;
    }

    .summary-total {
        display: flex;
        justify-content: space-between;
        padding: 20px 0;
        margin-top: 10px;
        border-top: 2px solid #2c3e50;
    }

    .total-label {
        color: #2c3e50;
        font-size: 1.2rem;
        font-weight: bold;
    }

    .total-value {
        color: #e74c3c;
        font-size: 1.5rem;
        font-weight: bold;
    }

    .checkout-btn {
        width: 100%;
        padding: 15px;
        background: #e74c3c;
        border: none;
        border-radius: 10px;
        color: white;
        font-size: 1.1rem;
        font-weight: bold;
        cursor: pointer;
        transition: all 0.3s;
        margin-top: 20px;
        box-shadow: 0 4px 15px rgba(231, 76, 60, 0.3);
    }

        .checkout-btn:hover {
            background: #c0392b;
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(231, 76, 60, 0.4);
        }

    /* Carrito vacío */
    .empty-cart {
        text-align: center;
        padding: 60px 20px;
        background: white;
        border-radius: 20px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
    }

    .empty-cart-icon {
        font-size: 5rem;
        margin-bottom: 20px;
    }

    .empty-cart h2 {
        color: #2c3e50;
        font-size: 1.8rem;
        margin-bottom: 10px;
    }

    .empty-cart p {
        color: #7f8c8d;
        font-size: 1.1rem;
        margin-bottom: 30px;
    }

    /* Modal */
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.6);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000;
    }

    .modal-content {
        background: white;
        padding: 30px 40px;
        border-radius: 12px;
        text-align: center;
        max-width: 450px;
        box-shadow: 0 0 30px rgba(0,0,0,0.3);
        animation: modalFadeIn 0.3s ease-out;
    }

    @@keyframes modalFadeIn {
        from {
            opacity: 0;
            transform: scale(0.9);
        }

        to {
            opacity: 1;
            transform: scale(1);
        }
    }

    .modal-content p {
        font-size: 1.1rem;
        color: #2c3e50;
        margin-bottom: 0;
        line-height: 1.6;
    }

    .modal-buttons {
        margin-top: 25px;
        display: flex;
        justify-content: center;
        gap: 15px;
    }

        .modal-buttons button {
            padding: 12px 30px;
            border: none;
            border-radius: 8px;
            font-weight: 600;
            font-size: 1rem;
            cursor: pointer;
            transition: all 0.3s;
        }

    .btn-danger {
        background-color: #e74c3c;
        color: white;
        box-shadow: 0 4px 15px rgba(231, 76, 60, 0.3);
    }

        .btn-danger:hover {
            background-color: #c0392b;
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(231, 76, 60, 0.4);
        }

    .btn-secondary {
        background-color: #95a5a6;
        color: white;
        box-shadow: 0 4px 15px rgba(149, 165, 166, 0.3);
    }

        .btn-secondary:hover {
            background-color: #7f8c8d;
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(149, 165, 166, 0.4);
        }

    /* Responsive */
    @@media (max-width: 1024px) {
        .cart-layout {
            grid-template-columns: 1fr;
        }

        .cart-summary-container {
            position: static;
        }

        .cart-header {
            display: none;
        }

        .cart-item {
            grid-template-columns: 1fr;
            gap: 15px;
        }

        .product-info {
            grid-column: 1;
        }

        .price-cell, .quantity-control, .subtotal-cell {
            justify-self: start;
        }
    }
</style>

<div class="cart-page">
    <div class="cart-container">
        <!-- Breadcrumb -->
        <nav class="breadcrumb-nav">
            <a asp-controller="Home" asp-action="Index">Home</a>
            <span>/</span>
            <span class="current">Carrito</span>
        </nav>

        <!-- Token antiforgery -->
        @Html.AntiForgeryToken()

        @if (Model.Items.Any())
        {
            <div class="cart-layout">
                <!-- Lista de items -->
                <div class="cart-items-section">
                    <div class="cart-header">
                        <div>Product</div>
                        <div>Price</div>
                        <div>Quantity</div>
                        <div>Subtotal</div>
                    </div>

                    @foreach (var item in Model.Items)
                    {
                        <div class="cart-item" data-menu-item-id="@item.MenuItemId">
                            <div class="product-info">
                                <div style="position: relative;">
                                    <img src="~/images/items/restaurant_@item.RestaurantId/@item.ImagenUrl" alt="@item.Nombre" class="product-image">
                                    <button class="remove-btn remove-item-btn" data-menu-item-id="@item.MenuItemId" title="Eliminar">✕</button>
                                </div>
                                <div class="product-details">
                                    <h3>@item.Nombre</h3>
                                    <p>@item.RestaurantName</p>
                                </div>
                            </div>

                            <div class="price-cell">
                                $@item.Precio.ToString("F2")
                            </div>

                            <div class="quantity-control" data-menu-item-id="@item.MenuItemId">
                                <button class="quantity-btn decrease-btn" data-menu-item-id="@item.MenuItemId">▼</button>
                                <input type="number" class="quantity-input" value="@item.Cantidad" data-menu-item-id="@item.MenuItemId" readonly />
                                <button class="quantity-btn increase-btn" data-menu-item-id="@item.MenuItemId">▲</button>
                            </div>

                            <div class="subtotal-cell" data-menu-item-id="@item.MenuItemId">
                                $@item.Subtotal.ToString("F2")
                            </div>
                        </div>
                    }

                    <div class="cart-actions">
                        <a asp-controller="Cliente" asp-action="Restaurantes" class="back-btn">Regresar al menú</a>
                        <a asp-controller="Cliente" asp-action="Menu" asp-route-id="@Model.RestaurantId" class="add-more-btn">Agregar al Carrito</a>
                    </div>
                </div>

                <!-- Sidebar: Cupón y Resumen -->
                <div class="cart-summary-container">
                    <!-- Cupón -->
                    <div class="coupon-section">
                        <form class="coupon-form" asp-action="ApplyCoupon" method="post">
                            <input type="text" name="couponCode" class="coupon-input" placeholder="Código">
                            <button type="submit" class="apply-coupon-btn">Aplicar Cupón</button>
                        </form>
                    </div>

                    <!-- Resumen -->
                    <div class="summary-section">
                        <h3 class="summary-title">Suma</h3>

                        <!-- CAMBIO: Agregados IDs para poder actualizarlos -->
                        <div class="summary-row">
                            <span class="summary-label">Subtotal:</span>
                            <span class="summary-value" id="cart-subtotal">$@Model.Total.ToString("F2")</span>
                        </div>

                        <div class="summary-row">
                            <span class="summary-label">Envío:</span>
                            <span class="summary-value" id="cart-shipping">$2.50</span>
                        </div>

                        <div class="summary-total">
                            <span class="total-label">Total:</span>
                            <span class="total-value" id="cart-total">$@((Model.Total + 2.50m).ToString("F2"))</span>
                        </div>

                        <a asp-action="Checkout" class="checkout-btn">Ir a Pagar</a>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="empty-cart">
                <div class="empty-cart-icon">🛒</div>
                <h2>Tu carrito está vacío</h2>
                <p>Agrega algunos productos deliciosos a tu carrito</p>
                <a asp-controller="Cliente" asp-action="Restaurantes" class="checkout-btn" style="max-width: 300px; margin: 0 auto; display: block;">
                    Explorar Restaurantes
                </a>
            </div>
        }
    </div>
</div>

<!-- Modal para confirmar eliminación -->
<div id="deleteModal" class="modal-overlay" style="display: none;">
    <div class="modal-content">
        <p id="deleteModalMessage">
            ¿Estás seguro de eliminar este producto del carrito?
        </p>
        <div class="modal-buttons">
            <button id="deleteConfirmBtn" class="btn btn-danger">Sí, eliminar</button>
            <button id="deleteCancelBtn" class="btn btn-secondary">Cancelar</button>
        </div>
    </div>
</div>

@section Scripts {
    <script>
               let itemToDelete = null;

               // Función para obtener el token antiforgery
               function getAntiForgeryToken() {
                   return document.querySelector('input[name="__RequestVerificationToken"]')?.value || '';
               }

               // ACTUALIZAR CANTIDAD
               document.querySelectorAll('.increase-btn, .decrease-btn').forEach(btn => {
                   btn.addEventListener('click', async function() {
                       const menuItemId = this.dataset.menuItemId;
                       const quantityInput = document.querySelector(`.quantity-input[data-menu-item-id="${menuItemId}"]`);
                       const currentQuantity = parseInt(quantityInput.value);

                       let newQuantity = currentQuantity;
                       if (this.classList.contains('increase-btn')) {
                           newQuantity = currentQuantity + 1;
                       } else if (this.classList.contains('decrease-btn')) {
                           newQuantity = currentQuantity - 1;
                       }

                       // Animación del botón
                       this.style.transform = 'scale(0.9)';
                       setTimeout(() => {
                           this.style.transform = 'scale(1)';
                       }, 100);

                       try {
                           const response = await fetch('/Cart/UpdateQuantityAjax', {
                               method: 'POST',
                               headers: {
                                   'Content-Type': 'application/x-www-form-urlencoded',
                                   'RequestVerificationToken': getAntiForgeryToken()
                               },
                               body: `menuItemId=${menuItemId}&cantidad=${newQuantity}`
                           });

                           const result = await response.json();

                           if (result.success) {
                               if (result.removed) {
                                   // Eliminar la fila con animación
                                   const cartItem = document.querySelector(`.cart-item[data-menu-item-id="${menuItemId}"]`);
                                   if (cartItem) {
                                       cartItem.style.transition = 'all 0.3s ease-out';
                                       cartItem.style.opacity = '0';
                                       cartItem.style.transform = 'translateX(-20px)';
                                       setTimeout(() => {
                                           cartItem.remove();
                                           verificarCarritoVacio(result.totalItems === 0);
                                       }, 300);
                                   }
                               } else {
                                   // Actualizar la cantidad y el subtotal
                                   quantityInput.value = result.itemQuantity;

                                   const subtotalCell = document.querySelector(`.subtotal-cell[data-menu-item-id="${menuItemId}"]`);
                                   if (subtotalCell) {
                                       subtotalCell.textContent = '$' + result.itemSubtotal.toFixed(2);        + result.itemSubtotal.toFixed(2);
                                       // Animación de actualización
                                       subtotalCell.style.transition = 'all 0.3s';
                                       subtotalCell.style.transform = 'scale(1.1)';
                                       subtotalCell.style.color = '#e74c3c';
                                       setTimeout(() => {
                                           subtotalCell.style.transform = 'scale(1)';
                                           subtotalCell.style.color = '#2c3e50';
                                       }, 300);
                                   }
                               }

                               // Actualizar totales
                               actualizarTotales(result.cartTotal, result.totalItems);
                           } else {
                               alert('Error: ' + result.message);
                           }
                       } catch (error) {
                           console.error('Error al actualizar cantidad:', error);
                           alert('Ocurrió un error al actualizar la cantidad.');
                       }
                   });
               });

               // ========== ELIMINAR ITEM ==========
               document.querySelectorAll('.remove-item-btn').forEach(btn => {
                   btn.addEventListener('click', function(e) {
                       e.preventDefault();
                       itemToDelete = this.dataset.menuItemId;
                       mostrarModalEliminacion();
                   });
               });

               async function eliminarItem() {
                   if (!itemToDelete) return;

                   try {
                       const response = await fetch('/Cart/RemoveItemAjax', {
                           method: 'POST',
                           headers: {
                               'Content-Type': 'application/x-www-form-urlencoded',
                               'RequestVerificationToken': getAntiForgeryToken()
                           },
                           body: `menuItemId=${itemToDelete}`
                       });

                       const result = await response.json();

                       if (result.success) {
                           // Eliminar la fila con animación
                           const cartItem = document.querySelector(`.cart-item[data-menu-item-id="${itemToDelete}"]`);
                           if (cartItem) {
                               cartItem.style.transition = 'all 0.3s ease-out';
                               cartItem.style.opacity = '0';
                               cartItem.style.transform = 'translateX(-20px)';
                               setTimeout(() => {
                                   cartItem.remove();
                                   verificarCarritoVacio(result.isEmpty);
                               }, 300);
                           }

                           // Actualizar totales
                           actualizarTotales(result.cartTotal, result.totalItems);

                           itemToDelete = null;
                       } else {
                           alert('Error: ' + result.message);
                       }
                   } catch (error) {
                       console.error('Error al eliminar item:', error);
                       alert('Ocurrió un error al eliminar el producto.');
                   }
               }

               // ========== FUNCIONES AUXILIARES ==========
               function actualizarTotales(subtotal, totalItems) {
                   const shippingCost = 2.50;
                   const total = subtotal + shippingCost;

                   // Actualizar subtotal
                   const subtotalElement = document.getElementById('cart-subtotal');
                   if (subtotalElement) {
                       subtotalElement.textContent = '$' + subtotal.toFixed(2);
                   }

                   // Actualizar total
                   const totalElement = document.getElementById('cart-total');
                   if (totalElement) {
                       totalElement.textContent = '$' + total.toFixed(2);
                       // Animación del total
                       totalElement.style.transition = 'all 0.3s';
                       totalElement.style.transform = 'scale(1.1)';
                       setTimeout(() => {
                           totalElement.style.transform = 'scale(1)';
                       }, 300);
                   }

                   // Actualizar badge global del carrito
                   actualizarBadgeGlobal(totalItems);
               }

               function actualizarBadgeGlobal(totalItems) {
                   const badge = document.querySelector('.cart-badge');
                   if (badge) {
                       if (totalItems > 0) {
                           badge.textContent = "";
                           badge.style.display = 'flex';
                       } else {
                           badge.style.display = 'none';
                       }
                   }
               }

               function verificarCarritoVacio(isEmpty) {
                   if (isEmpty) {
                       // Recargar la página para mostrar el estado de carrito vacío
                       setTimeout(() => {
                           window.location.reload();
                       }, 500);
                   }
               }

               function mostrarModalEliminacion() {
                   const modal = document.getElementById('deleteModal');
                   const confirmBtn = document.getElementById('deleteConfirmBtn');
                   const cancelBtn = document.getElementById('deleteCancelBtn');

                   modal.style.display = 'flex';

                   const confirmHandler = async () => {
                       modal.style.display = 'none';
                       confirmBtn.removeEventListener('click', confirmHandler);
                       cancelBtn.removeEventListener('click', cancelHandler);
                       await eliminarItem();
                   };

                   const cancelHandler = () => {
                       modal.style.display = 'none';
                       confirmBtn.removeEventListener('click', confirmHandler);
                       cancelBtn.removeEventListener('click', cancelHandler);
                       itemToDelete = null;
                   };

                   confirmBtn.addEventListener('click', confirmHandler);
                   cancelBtn.addEventListener('click', cancelHandler);

                   // Cerrar modal al hacer clic fuera de él
                   modal.addEventListener('click', function(e) {
                       if (e.target === modal) {
                           cancelHandler();
                       }
                   });
               }
    </script>
}