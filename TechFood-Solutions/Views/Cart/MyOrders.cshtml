@model IEnumerable<TechFood_Solutions.Models.Order>

@{
    ViewData["Title"] = "Mis Órdenes";
}

<style>
    .orders-page {
        padding: 40px 0;
        background-color: #f8f9fa;
        min-height: calc(100vh - 200px);
    }

    .orders-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 15px;
    }

    .page-header {
        text-align: center;
        margin-bottom: 40px;
    }

    .page-title {
        font-size: 2.5rem;
        color: #2c3e50;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .page-subtitle {
        font-size: 1.1rem;
        color: #7f8c8d;
    }

    /* Lista de órdenes */
    .orders-list {
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

    .order-card {
        background: white;
        border-radius: 15px;
        padding: 25px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
        transition: transform 0.3s, box-shadow 0.3s;
        cursor: pointer;
    }

        .order-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.12);
        }

    .order-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 2px solid #f0f0f0;
    }

    .order-info-left {
        display: flex;
        flex-direction: column;
        gap: 8px;
    }

    .order-number {
        font-size: 1.3rem;
        color: #2c3e50;
        font-weight: bold;
    }

    .order-date {
        font-size: 0.95rem;
        color: #7f8c8d;
    }

    .order-status {
        display: inline-block;
        padding: 8px 20px;
        border-radius: 20px;
        font-size: 0.9rem;
        font-weight: 600;
    }

    .status-pendiente {
        background: #fff3cd;
        color: #856404;
    }

    .status-preparando {
        background: #d1ecf1;
        color: #0c5460;
    }

    .status-encamino {
        background: #cce5ff;
        color: #004085;
    }

    .status-entregado {
        background: #d4edda;
        color: #155724;
    }

    .status-cancelado {
        background: #f8d7da;
        color: #721c24;
    }

    .order-body {
        display: grid;
        grid-template-columns: 2fr 1fr 1fr;
        gap: 20px;
        margin-bottom: 15px;
    }

    .restaurant-info {
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .restaurant-icon {
        width: 50px;
        height: 50px;
        background: linear-gradient(135deg, #e74c3c, #c0392b);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.5rem;
    }

    .restaurant-details h3 {
        font-size: 1.1rem;
        color: #2c3e50;
        margin: 0 0 5px 0;
    }

    .restaurant-details p {
        font-size: 0.9rem;
        color: #7f8c8d;
        margin: 0;
    }

    .order-summary {
        text-align: center;
    }

    .summary-label {
        font-size: 0.9rem;
        color: #7f8c8d;
        margin-bottom: 5px;
    }

    .summary-value {
        font-size: 1.1rem;
        color: #2c3e50;
        font-weight: 600;
    }

    .order-total {
        text-align: right;
    }

    .total-label {
        font-size: 0.9rem;
        color: #7f8c8d;
        margin-bottom: 5px;
    }

    .total-value {
        font-size: 1.5rem;
        color: #e74c3c;
        font-weight: bold;
    }

    .order-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding-top: 15px;
        border-top: 1px solid #f0f0f0;
    }

    .delivery-address {
        display: flex;
        align-items: center;
        gap: 8px;
        color: #7f8c8d;
        font-size: 0.9rem;
    }

    .view-details-btn {
        padding: 10px 25px;
        background: #e74c3c;
        border: none;
        border-radius: 8px;
        color: white;
        font-size: 0.95rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s;
        text-decoration: none;
        display: inline-block;
    }

        .view-details-btn:hover {
            background: #c0392b;
            transform: translateY(-2px);
            color: white;
        }

    /* Estado vacío */
    .empty-orders {
        text-align: center;
        padding: 60px 20px;
        background: white;
        border-radius: 20px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
    }

    .empty-icon {
        font-size: 5rem;
        margin-bottom: 20px;
    }

    .empty-orders h2 {
        color: #2c3e50;
        font-size: 1.8rem;
        margin-bottom: 10px;
    }

    .empty-orders p {
        color: #7f8c8d;
        font-size: 1.1rem;
        margin-bottom: 30px;
    }

    .start-order-btn {
        padding: 15px 40px;
        background: #e74c3c;
        border: none;
        border-radius: 10px;
        color: white;
        font-size: 1.1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s;
        text-decoration: none;
        display: inline-block;
        box-shadow: 0 4px 15px rgba(231, 76, 60, 0.3);
    }

        .start-order-btn:hover {
            background: #c0392b;
            transform: translateY(-2px);
            color: white;
        }

    /* Filtros */
    .filters-section {
        background: white;
        border-radius: 15px;
        padding: 20px;
        margin-bottom: 30px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.08);
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
    }

    .filter-btn {
        padding: 10px 20px;
        background: white;
        border: 2px solid #e0e0e0;
        border-radius: 8px;
        color: #2c3e50;
        font-size: 0.95rem;
        cursor: pointer;
        transition: all 0.3s;
    }

        .filter-btn:hover, .filter-btn.active {
            background: #e74c3c;
            border-color: #e74c3c;
            color: white;
        }

    /* Responsive */
    @@media (max-width: 968px) {
        .order-body {
            grid-template-columns: 1fr;
            gap: 15px;
        }

        .order-total, .order-summary {
            text-align: left;
        }

        .order-footer {
            flex-direction: column;
            gap: 15px;
            align-items: flex-start;
        }

        .page-title {
            font-size: 2rem;
        }
    }
</style>

<div class="orders-page">
    <div class="orders-container">
        <!-- Header -->
        <div class="page-header">
            <h1 class="page-title">Mis Órdenes</h1>
            <p class="page-subtitle">Historial de tus pedidos</p>
        </div>

        @if (Model != null && Model.Any())
        {
            <!-- Filtros -->
            <div class="filters-section">
                <button class="filter-btn active" onclick="filterOrders('all')">Todas</button>
                <button class="filter-btn" onclick="filterOrders('Pendiente')">Pendientes</button>
                <button class="filter-btn" onclick="filterOrders('Preparando')">Preparando</button>
                <button class="filter-btn" onclick="filterOrders('EnCamino')">En Camino</button>
                <button class="filter-btn" onclick="filterOrders('Entregado')">Entregadas</button>
            </div>

            <!-- Lista de órdenes -->
            <div class="orders-list">
                @foreach (var order in Model)
                {
                    <div class="order-card" data-status="@order.Estado">
                        <div class="order-header">
                            <div class="order-info-left">
                                <div class="order-number">Orden #@order.Id.ToString("D6")</div>
                                <div class="order-date">@order.FechaOrden.ToString("dd/MM/yyyy hh:mm tt")</div>
                            </div>
                            <span class="order-status status-@order.Estado.ToLower()">@order.Estado</span>
                        </div>

                        <div class="order-body">
                            <div class="restaurant-info">
                                <div class="restaurant-icon">🍽️</div>
                                <div class="restaurant-details">
                                    <h3>@order.Restaurant.Nombre</h3>
                                    <p>@order.OrderItems.Count() producto(s)</p>
                                </div>
                            </div>

                            <div class="order-summary">
                                <div class="summary-label">Items</div>
                                <div class="summary-value">@order.OrderItems.Sum(oi => oi.Cantidad)</div>
                            </div>

                            <div class="order-total">
                                <div class="total-label">Total</div>
                                <div class="total-value">$@order.Total.ToString("F2")</div>
                            </div>
                        </div>

                        <div class="order-footer">
                            <div class="delivery-address">
                                <span>📍</span>
                                <span>@order.DireccionEntrega</span>
                            </div>
                            <a asp-action="OrderDetails" asp-route-id="@order.Id" class="view-details-btn">
                                Ver Detalles
                            </a>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-orders">
                <div class="empty-icon">📦</div>
                <h2>No tienes órdenes aún</h2>
                <p>Comienza a ordenar tus comidas favoritas</p>
                <a asp-controller="Cliente" asp-action="Restaurantes" class="start-order-btn">
                    Explorar Restaurantes
                </a>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Función para filtrar órdenes por estado
        function filterOrders(status) {
            const cards = document.querySelectorAll('.order-card');
            const buttons = document.querySelectorAll('.filter-btn');

            // Actualizar botones activos
            buttons.forEach(btn => btn.classList.remove('active'));
            event.target.classList.add('active');

            // Filtrar cards
            cards.forEach(card => {
                if (status === 'all') {
                    card.style.display = 'block';
                } else {
                    if (card.dataset.status === status) {
                        card.style.display = 'block';
                    } else {
                        card.style.display = 'none';
                    }
                }
            });
        }

        // Animación al cargar
        document.querySelectorAll('.order-card').forEach((card, index) => {
            card.style.opacity = '0';
            card.style.transform = 'translateY(20px)';
            setTimeout(() => {
                card.style.transition = 'all 0.5s ease';
                card.style.opacity = '1';
                card.style.transform = 'translateY(0)';
            }, index * 100);
        });
    </script>
}